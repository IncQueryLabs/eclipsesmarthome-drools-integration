package drooldsample

import org.eclipse.smarthome.core.items.Item;
import org.eclipse.smarthome.core.library.types.OnOffType;
import org.eclipse.smarthome.core.library.types.OpenClosedType;
import org.eclipse.smarthome.core.types.Command;
import org.eclipse.smarthome.core.types.State;
import com.incquerylabs.iot.droolsbundle.ItemCommandEvent;
import com.incquerylabs.iot.droolsbundle.ItemStateChangedEvent;
import com.incquerylabs.iot.eshieventbusservice.IEventBusService;

global IEventBusService openhab;
global OpenClosedType OPEN;
global OpenClosedType CLOSED;
global OnOffType ON;
global OnOffType OFF;


declare ItemCommandEvent
    @role ( event )
end


declare ItemStateChangedEvent
    @role ( event )
end

declare ManualSwitchON
    @role ( event )

    itemName : String @key
end



rule "Init"
    lock-on-active
    when
        eval ( true )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        
        OPEN = OpenClosedType.OPEN;
        CLOSED = OpenClosedType.CLOSED;
        ON = OnOffType.ON;
        OFF = OnOffType.OFF;

        openhab.postCommand("A_Lights", OFF);
        openhab.postCommand("O_Lights_Porch_1", OFF);
        openhab.postCommand("O_Lights_Porch_2", OFF);
        openhab.postCommand("A_Roller_Shades_1_Up", OFF);
        openhab.postCommand("A_Roller_Shades_1_Down", OFF);
        openhab.postCommand("A_Roller_Shades_3_Up", OFF);
        openhab.postCommand("A_Roller_Shades_3_Down", OFF);
        
        openhab.postCommand("B_Lights_1", OFF);
        openhab.postCommand("B_Lights_2", OFF);
        
        openhab.postCommand("C_Lights", OFF);
        
        openhab.postCommand("D_Lights_1", OFF);
        openhab.postCommand("D_Lights_2", OFF);
        openhab.postCommand("D_Roller_Shades_Up", OFF);
        openhab.postCommand("D_Roller_Shades_Down", OFF);

        openhab.postCommand("E_Lights", OFF);
        openhab.postCommand("E_Roller_Shades_Up", OFF);
        openhab.postCommand("E_Roller_Shades_Down", OFF);
end


rule "Item command event"
    when
        $itemCommand : ItemCommandEvent( name : name, command : command)
    then
        System.out.println( "IncQuery droolsbundle: " + $itemCommand);
end


rule "Item state changed event"
    when
        $itemState : ItemStateChangedEvent( name : name, newState : newState, oldState : oldState)
    then
        System.out.println( "IncQuery droolsbundle: item " + $itemState);
end


rule "A Lights Switch On"
    when
        $item : Item( name == "A_Lights", state == OFF) 

        $itemState : ItemStateChangedEvent( 
        (name == "A_Light_Switch_Dimmer_1_Up" && newState == OPEN) || 
        (name == "A_Light_Switch_Dimmer_2_Up" && newState == OPEN) || 
        (name == "A_Light_Switch_Dimmer_3_Up" && newState == OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand($item.getName(), ON);
end


rule "A Lights Switch Off"
    when
        $item : Item( name == "A_Lights", state == ON) 

        itemState : ItemStateChangedEvent( 
        (name == "A_Light_Switch_Dimmer_1_Down" && newState == OPEN) || 
        (name == "A_Light_Switch_Dimmer_2_Down" && newState == OPEN) || 
        (name == "A_Light_Switch_Dimmer_3_Down" && newState == OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand($item.getName(), OFF);
end


rule "A Lights Motion On"
    when
        $item : Item( name == "A_Lights", state == OFF) 
        $brigthnessSensor : Item( name == "A_Lights", state == OPEN) 

        $itemState : ItemStateChangedEvent( name == "A_Motion_Detector", newState == OPEN)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand($item.getName(), ON);
end


rule "A Lights Motion Off"
    when
        $item : Item( name == "A_Lights", state == ON) 

        $motion : ItemStateChangedEvent( name == "A_Motion_Detector", newState == CLOSED)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        openhab.postCommand($item.getName(), OnOffType.OFF);
end


/*
rule "A RollerShades 2"
    when
        Status( itemName == "A_Roller_Shades_3_Up", $statusUp : status)
        Status( itemName == "A_Roller_Shades_3_Down", $statusDown : status)

        itemState : ItemStateChanged( (itemName == "A_Up_Down_Switch_2_Up" && newState == OpenClosedType.OPEN) || (itemName == "A_Up_Down_Switch_2_Down" && newState == OpenClosedType.OPEN) )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        if(itemState.getItemName() == "A_Up_Down_Switch_2_Up" ) {
            if( $statusUp == OnOffType.OFF && $statusDown == OnOffType.OFF) {
                openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.ON);
                openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.OFF);
                openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.OFF);
            }
        }
        else {
            if( $statusUp == OnOffType.OFF && $statusDown == OnOffType.OFF) {
                openhab.postCommand("A_Roller_Shades_3_Down", OnOffType.ON);
                openhab.postCommand("A_Roller_Shades_4_Down", OnOffType.ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_3_Up", OnOffType.OFF);
                openhab.postCommand("A_Roller_Shades_4_Up", OnOffType.OFF);
            }
        }
end
*/