package droolssample

import org.eclipse.smarthome.core.items.Item;
import org.eclipse.smarthome.core.library.items.SwitchItem;
import org.eclipse.smarthome.core.library.types.OnOffType;
import org.eclipse.smarthome.core.library.types.OpenClosedType;
import org.eclipse.smarthome.core.library.types.PercentType;
import org.eclipse.smarthome.core.library.types.DecimalType;
import org.eclipse.smarthome.core.library.types.IncreaseDecreaseType;
import org.eclipse.smarthome.core.types.Command;
import org.eclipse.smarthome.core.types.State;
import com.incquerylabs.iot.droolsbundle.ItemCommandEvent;
import com.incquerylabs.iot.droolsbundle.ItemCommandHistory;
import com.incquerylabs.iot.droolsbundle.ItemStateChangedEvent;
import com.incquerylabs.iot.droolsbundle.ItemStateHistory;
import com.incquerylabs.iot.droolsbundle.TimedDimmer;
import com.incquerylabs.iot.eshieventbusservice.IEventBusService;


global IEventBusService openhab;
global OpenClosedType OPEN;
global OpenClosedType CLOSED;
global OnOffType ON;
global OnOffType OFF;
global PercentType HUNDRED;
global PercentType ZERO;
global IncreaseDecreaseType INCREASE;
global IncreaseDecreaseType DECREASE;


declare ItemCommandEvent
    @role ( event )
end


declare ItemCommandHistory
    @role ( event )
end


declare ItemStateChangedEvent
    @role ( event )
end


declare ItemStateHistory
    @role ( event )
end






rule "Init"
    lock-on-active
    when
        eval ( true )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        openhab.postCommand("Example_Light", OFF);
        
        openhab.postCommand("A_Lights", OFF);
        openhab.postCommand("A_Lights_Analog", OFF);
        openhab.postCommand("O_Lights_Porch_1", OFF);
        openhab.postCommand("O_Lights_Porch_2", OFF);
        openhab.postCommand("A_Roller_Shades_1_Up", OFF);
        openhab.postCommand("A_Roller_Shades_1_Down", OFF);
        openhab.postCommand("A_Roller_Shades_3_Up", OFF);
        openhab.postCommand("A_Roller_Shades_3_Down", OFF);

        openhab.postCommand("A_Light_Switch_Dimmer_3_Up", CLOSED);
        openhab.postCommand("A_Light_Switch_Dimmer_3_Down", CLOSED);
        
        openhab.postCommand("B_Lights_1", OFF);
        openhab.postCommand("B_Lights_2", OFF);
        
        openhab.postCommand("C_Lights", OFF);
        
        openhab.postCommand("D_Lights_1", OFF);
        openhab.postCommand("D_Lights_2", OFF);
        openhab.postCommand("D_Roller_Shades_Up", OFF);
        openhab.postCommand("D_Roller_Shades_Down", OFF);

        openhab.postCommand("E_Lights", OFF);
        openhab.postCommand("E_Roller_Shades_Up", OFF);
        openhab.postCommand("E_Roller_Shades_Down", OFF);
end


rule "Item command event"
    when
        $itemCommand : ItemCommandEvent( name : name, command : command)
    then
        System.out.println( "IncQuery droolsbundle: " + $itemCommand);
end


rule "Item state changed event"
    when
        $itemState : ItemStateChangedEvent( $item : item, name : name, newState : newState, oldState : oldState)
    then
        System.out.println( "IncQuery droolsbundle: item " + $itemState);
end


rule "Exapmle Lights Switch"
    when
        $item : Item( name == "Example_Light", $state : state)

        $itemState : ItemStateChangedEvent( name == "Example_Switch", newState == OPEN)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        if ($state == ON) {
            openhab.postCommand($item.getName(), OFF);
        } else {
            openhab.postCommand($item.getName(), ON);
        }
end


rule "Dimmer off"
    when
        $itemState : ItemStateChangedEvent( $item : item && ( 
        name == "A_Light_Switch_Dimmer_1_Down" || 
        name == "A_Light_Switch_Dimmer_2_Down" || 
        name == "A_Light_Switch_Dimmer_3_Down" ||
        name == "A_Light_Switch_Dimmer_1_Up" || 
        name == "A_Light_Switch_Dimmer_2_Up" || 
        name == "A_Light_Switch_Dimmer_3_Up") && 
        newState == CLOSED )
    
    then
        openhab.stopTimedCommand("A_Lights_Analog");
end


rule "A Lights Switch On"
    when
        $item : Item( name == "A_Lights_Analog", $state : state) 

        $itemStateOpen : ItemStateHistory( ( 
        name == "A_Light_Switch_Dimmer_1_Up" || 
        name == "A_Light_Switch_Dimmer_2_Up" || 
        name == "A_Light_Switch_Dimmer_3_Up") && 
        newState == OPEN )


        $itemStateClosed : ItemStateChangedEvent ( 
        this after[0s,1s] $itemStateOpen && 
        ( name == "A_Light_Switch_Dimmer_1_Up" || 
        name == "A_Light_Switch_Dimmer_2_Up" || 
        name == "A_Light_Switch_Dimmer_3_Up") && 
        newState == CLOSED )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        openhab.postCommand($item.getName(), HUNDRED);
end


rule "A Lights Switch Off"
    when
        $item : Item( name == "A_Lights_Analog", $state : state) 

        $itemStateOpen : ItemStateHistory( ( 
        name == "A_Light_Switch_Dimmer_1_Down" || 
        name == "A_Light_Switch_Dimmer_2_Down" || 
        name == "A_Light_Switch_Dimmer_3_Down") && 
        newState == OPEN )

        $itemStateClosed : ItemStateChangedEvent ( 
        this after[0s,1s] $itemStateOpen && 
        ( name == "A_Light_Switch_Dimmer_1_Down" || 
        name == "A_Light_Switch_Dimmer_2_Down" || 
        name == "A_Light_Switch_Dimmer_3_Down") && 
        newState == CLOSED )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        openhab.postCommand($item.getName(), ZERO);
end


rule "A Lights Switch Dimmer Up"
    when
        $item : Item( name == "A_Lights_Analog", $state : state) 

        $itemStateOpen : ItemStateChangedEvent( ( 
        name == "A_Light_Switch_Dimmer_1_Up" || 
        name == "A_Light_Switch_Dimmer_2_Up" || 
        name == "A_Light_Switch_Dimmer_3_Up") && 
        newState == OPEN )

    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        openhab.timedCommand(TimedDimmer.create($item, INCREASE, 2 , 1000, 50));
end


rule "A Lights Switch Dimmer Down"
    when
        $item : Item( name == "A_Lights_Analog", $state : state) 

        $itemStateOpen : ItemStateChangedEvent( ( 
        name == "A_Light_Switch_Dimmer_1_Down" || 
        name == "A_Light_Switch_Dimmer_2_Down" || 
        name == "A_Light_Switch_Dimmer_3_Down") && 
        newState == OPEN )

    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        openhab.timedCommand(TimedDimmer.create($item, DECREASE, 2 , 1000, 50));
end

rule "A Lights Motion"
    when
        $item : Item( name == "A_Lights_Analog", $lightState : state)
        $brigthnessSensor : Item( name == "A_Brightness_Sensor", $brightnesSesnsorState: state)

        $itemState : ItemStateChangedEvent( name == "A_Motion_Detector", $motionDetectorState : newState)
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());
        
        if (!$lightState.equals(ZERO) && $motionDetectorState == CLOSED) {
            openhab.postCommand($item.getName(), ZERO);
        } else if (!$lightState.equals(HUNDRED) && $motionDetectorState == OPEN && $brightnesSesnsorState == OPEN) {
            openhab.postCommand($item.getName(), HUNDRED);
        }
end



rule "A RollerShades 1"
    when
        Item( name == "A_Roller_Shades_1_Up", $stateUp : state)
        Item( name == "A_Roller_Shades_1_Down", $stateDown : state) 

        $itemState : ItemStateChangedEvent( (
        name == "A_Up_Down_Switch_1_Up" || 
        name == "A_Up_Down_Switch_1_Down") && 
        newState == OPEN )
    then
        System.out.println( "IncQuery droolsbundle: " + drools.getRule().getName());

        if($itemState.getName().equals("A_Up_Down_Switch_1_Up") ) {

            if( $stateUp == OFF && $stateDown == OFF) {
                openhab.postCommand("A_Roller_Shades_1_Up", ON);
                openhab.postCommand("A_Roller_Shades_2_Up", ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_1_Down", OFF);
                openhab.postCommand("A_Roller_Shades_2_Down", OFF);
            }
        }
        else {

            if( $stateUp == OFF && $stateDown == OFF) {
                openhab.postCommand("A_Roller_Shades_1_Down", ON);
                openhab.postCommand("A_Roller_Shades_2_Down", ON);
            }
            else {
                openhab.postCommand("A_Roller_Shades_1_Up", OFF);
                openhab.postCommand("A_Roller_Shades_2_Up", OFF);
            }
        }
end