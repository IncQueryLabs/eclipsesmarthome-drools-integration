template header
motiondetector
light

package homeioexample

import org.eclipse.smarthome.core.items.Item;
import org.eclipse.smarthome.core.library.items.SwitchItem;
import org.eclipse.smarthome.core.library.types.OnOffType;
import org.eclipse.smarthome.core.library.types.OpenClosedType;
import org.eclipse.smarthome.core.library.types.PercentType;
import org.eclipse.smarthome.core.library.types.DecimalType;
import org.eclipse.smarthome.core.library.types.IncreaseDecreaseType;
import org.eclipse.smarthome.core.types.Command;
import org.eclipse.smarthome.core.types.State;
import com.incquerylabs.smarthome.droolsbundle.ItemCommandEvent;
import com.incquerylabs.smarthome.droolsbundle.ItemCommandHistory;
import com.incquerylabs.smarthome.droolsbundle.ItemStateChangedEvent;
import com.incquerylabs.smarthome.droolsbundle.ItemStateHistory;
import com.incquerylabs.smarthome.droolsbundle.TimedDimmer;
import com.incquerylabs.smarthome.droolsbundle.DateTime;
import com.incquerylabs.smarthome.eventbusservice.IEventPublisher;

global IEventPublisher openhab;
global OpenClosedType OPEN;
global OpenClosedType CLOSED;
global OnOffType ON;
global OnOffType OFF;
global PercentType HUNDRED;
global PercentType ZERO;
global IncreaseDecreaseType INCREASE;
global IncreaseDecreaseType DECREASE;
global OpenClosedType BRIGHTNESS; 
global OpenClosedType DARKNESS; 
global OpenClosedType MOTION;
global OpenClosedType NOMOTION;

template "lights for motion"
rule "Lights for motion_@{row.rowNumber}"
    when
        $light : Item( name == "@{light}", $lightState : state)

        ItemStateChangedEvent( name == "@{motiondetector}", $motionDetectorState : newState)
    then
        if ($lightState.equals(ZERO) && $motionDetectorState == MOTION) {
            openhab.postCommand($light, ON);
        }
end

end template