package genrules

import org.eclipse.smarthome.core.items.Item;
import org.eclipse.smarthome.core.library.items.SwitchItem;
import org.eclipse.smarthome.core.library.types.OnOffType;
import org.eclipse.smarthome.core.library.types.OpenClosedType;
import org.eclipse.smarthome.core.library.types.PercentType;
import org.eclipse.smarthome.core.library.types.DecimalType;
import org.eclipse.smarthome.core.library.types.IncreaseDecreaseType;
import org.eclipse.smarthome.core.types.Command;
import org.eclipse.smarthome.core.types.State;
import com.incquerylabs.smarthome.droolsbundle.ItemCommandEvent;
import com.incquerylabs.smarthome.droolsbundle.ItemCommandHistory;
import com.incquerylabs.smarthome.droolsbundle.ItemStateChangedEvent;
import com.incquerylabs.smarthome.droolsbundle.ItemStateHistory;
import com.incquerylabs.smarthome.droolsbundle.TimedDimmer;
import com.incquerylabs.smarthome.droolsbundle.DateTime;
import com.incquerylabs.smarthome.eventbusservice.IEventPublisher;


global IEventPublisher openhab;
global OpenClosedType OPEN;
global OpenClosedType CLOSED;
global OnOffType ON;
global OnOffType OFF;
global PercentType HUNDRED;
global PercentType ZERO;
global IncreaseDecreaseType INCREASE;
global IncreaseDecreaseType DECREASE;
global OpenClosedType BRIGHTNESS; 
global OpenClosedType DARKNESS; 
global OpenClosedType MOTION;
global OpenClosedType NOMOTION;
global OpenClosedType DOOR_OPENED;
global OpenClosedType DOOR_CLOSED;

global OpenClosedType ARMED
global OpenClosedType DEARMED

global Integer MONDAY;
global Integer TUESDAY;
global Integer WEDNESDAY;
global Integer THURSDAY;
global Integer FRIDAY;
global Integer SATURDAY;
global Integer SUNDAY;

declare ItemCommandEvent
    @role ( event )
end


declare ItemCommandHistory
    @role ( event )
end


declare ItemStateChangedEvent
    @role ( event )
end


declare ItemStateHistory
    @role ( event )
end


rule "Init"
    lock-on-active
    when
        eval ( true )
    then
        openhab.postCommand("Example_Light", OFF);
        openhab.postCommand("A_Lights_Analog", ZERO); 
        
        openhab.postCommand("gLight", OFF);
        openhab.postCommand("A_Roller_Shades_1_Up", OFF);
        openhab.postCommand("A_Roller_Shades_1_Down", OFF);
        openhab.postCommand("A_Roller_Shades_3_Up", OFF);
        openhab.postCommand("A_Roller_Shades_3_Down", OFF);

        openhab.postCommand("A_Light_Switch_Dimmer_3_Up", CLOSED);
        openhab.postCommand("A_Light_Switch_Dimmer_3_Down", CLOSED);
        
        openhab.postCommand("D_Roller_Shades_Up", OFF);
        openhab.postCommand("D_Roller_Shades_Down", OFF);

        openhab.postCommand("E_Roller_Shades_Up", OFF);
        openhab.postCommand("E_Roller_Shades_Down", OFF);
end


rule "Item command event"
    when
        $itemCommand : ItemCommandEvent( name : name, command : command)
    then
        System.out.println( "IncQuery droolsbundle: " + $itemCommand);
end


rule "Item state changed event"
    when
        $itemState : ItemStateChangedEvent( $item : item, name : name, newState : newState, oldState : oldState)
    then
        System.out.println( "IncQuery droolsbundle: item " + $itemState);
end